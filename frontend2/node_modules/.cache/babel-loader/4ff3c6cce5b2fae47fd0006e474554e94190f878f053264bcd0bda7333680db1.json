{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helwes04\\\\Documents\\\\GitHub\\\\workoutproject\\\\frontend2\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport '../css/Calendar.css';\nimport backIcon from '../images/backArrow.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const {\n    fetchCalendarEntries,\n    fetchCategoryEntries\n  } = useContext(AuthContext);\n  const [daysInMonth, setDaysInMonth] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  useEffect(() => {\n    populateCalendar(currentMonth, currentYear);\n    updateConicGradients(currentMonth, currentYear);\n  }, [currentMonth, currentYear]);\n  const populateCalendar = (month, year) => {\n    const firstDayOfMonth = new Date(year, month, 1).getDay(); // get the day of the week the month starts on\n    const daysInCurrentMonth = new Date(year, month + 1, 0).getDate(); // get the number of days in the month\n\n    let daysArray = [];\n    for (let i = 0; i < firstDayOfMonth - 1; i++) {\n      daysArray.push(null); // fill in empty slots for days before the 1st of the month\n    }\n    for (let i = 1; i <= daysInCurrentMonth; i++) {\n      daysArray.push(i);\n    }\n    setDaysInMonth(daysArray);\n  };\n  const updateConicGradients = async (month, year) => {\n    try {\n      const calendarEntries = await fetchCalendarEntries();\n      if (!Array.isArray(calendarEntries)) {\n        console.error('calendarEntries is not an array:', calendarEntries);\n        return;\n      }\n      const daysInCurrentMonth = new Date(year, month + 1, 0).getDate();\n      const categorysThatDay = [];\n      for (let i = 0; i < daysInCurrentMonth; i++) {\n        const date = new Date(year, month, i + 1);\n        const entriesThatDay = calendarEntries.filter(entry => {\n          const entryDate = new Date(entry.date);\n          return entryDate.getDate() === date.getDate() && entryDate.getMonth() === date.getMonth() && entryDate.getFullYear() === date.getFullYear();\n        });\n        const categoriesForDay = entriesThatDay.map(entry => entry.category);\n        categorysThatDay.push(categoriesForDay);\n      }\n      const categoryEntries = await fetchCategoryEntries();\n      const categoryColors = categoryEntries.reduce((acc, category) => {\n        acc[category._id] = category.color;\n        return acc;\n      }, {});\n      const conicGradients = categorysThatDay.map(categories => {\n        const uniqueCategories = [...new Set(categories)];\n        const segmentSize = 360 / uniqueCategories.length;\n        const gradientSteps = uniqueCategories.map((category, i) => {\n          const color = categoryColors[category];\n          const startAngle = i * segmentSize;\n          const endAngle = (i + 1) * segmentSize;\n          return `${color} ${startAngle}deg ${endAngle}deg`;\n        });\n        return `conic-gradient(${gradientSteps.join(', ')})`;\n      });\n      const dayNumberContainers = document.querySelectorAll('.dayNumberContainer:not(.empty)');\n      dayNumberContainers.forEach((container, i) => {\n        container.style.backgroundImage = conicGradients[i];\n      });\n    } catch (error) {\n      console.error('Error fetching calendar entries:', error);\n    }\n  };\n  const changeMonth = direction => {\n    let newMonth = currentMonth;\n    let newYear = currentYear;\n    if (direction === 'back') {\n      newMonth = currentMonth === 0 ? 11 : currentMonth - 1;\n      newYear = currentMonth === 0 ? currentYear - 1 : currentYear;\n    } else if (direction === 'next') {\n      newMonth = currentMonth === 11 ? 0 : currentMonth + 1;\n      newYear = currentMonth === 11 ? currentYear + 1 : currentYear;\n    }\n    setCurrentMonth(newMonth);\n    setCurrentYear(newYear);\n\n    //clear all circle colors\n    const dayNumberContainers = document.querySelectorAll('.dayNumberContainer');\n    dayNumberContainers.forEach(container => {\n      container.style.backgroundImage = 'none';\n    });\n\n    //clear all selected days\n    const dayNumberSelected = document.querySelectorAll('.dayNumberSelected');\n    dayNumberSelected.forEach(day => {\n      day.classList.remove('selected');\n    });\n\n    //update the circle colors\n    updateConicGradients(newMonth, newYear);\n  };\n  const changeSelected = event => {\n    console.log('event:', event.currentTarget);\n    const dayNumberSelected = document.querySelectorAll('.dayNumberSelected');\n    const image = event.currentTarget.querySelector('.dayNumberContainer').style.backgroundImage;\n    if (image !== '' && image !== 'none') {\n      dayNumberSelected.forEach(day => {\n        day.classList.remove('selected');\n      });\n      event.currentTarget.classList.add('selected');\n      const dateTitle = document.querySelector('#dateTitle');\n      const day = event.currentTarget.querySelector('.dayNumber').textContent;\n      const date = new Date(currentYear, currentMonth, day);\n      if (currentYear === new Date().getFullYear()) {\n        dateTitle.innerHTML = date.toLocaleDateString('default', {\n          month: 'long',\n          day: 'numeric'\n        });\n      } else {\n        dateTitle.innerHTML = date.toLocaleDateString('default', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        });\n      }\n      updateEntries();\n    }\n  };\n  const updateEntries = async () => {\n    const entriesContainer = document.querySelector('#entriesContainer');\n    entriesContainer.innerHTML = '';\n    try {\n      const allEntries = await fetchCalendarEntries();\n      const categoryEntries = await fetchCategoryEntries();\n\n      // Create a mapping of category _id to its title and color\n      const categoryMap = categoryEntries.reduce((acc, category) => {\n        acc[category._id] = {\n          title: category.title,\n          color: category.color\n        };\n        return acc;\n      }, {});\n      const month = currentMonth;\n      const year = currentYear;\n      const day = document.querySelector('.selected .dayNumber').textContent;\n      const date = new Date(year, month, day);\n      const entriesThatDay = allEntries.filter(entry => {\n        const entryDate = new Date(entry.date);\n        return entryDate.getDate() === date.getDate() && entryDate.getMonth() === date.getMonth() && entryDate.getFullYear() === date.getFullYear();\n      });\n      entriesThatDay.forEach(entry => {\n        const eventsContainer = document.createElement('div');\n        eventsContainer.className = 'eventContainer';\n        eventsContainer.dataset.id = entry._id;\n        // onclick redirect to the tasks page\n        eventsContainer.onclick = () => {\n          window.location.href = `/tasks/${entry._id}`;\n        };\n\n        // Get the category details from the mapping\n        const category = categoryMap[entry.category] || {\n          title: 'Unknown Category',\n          color: '#ffffff'\n        };\n\n        // Set the background color of the eventsContainer\n        eventsContainer.style.backgroundColor = category.color;\n        const eventHeaderTitle = document.createElement('p');\n        eventHeaderTitle.className = 'eventHeaderTitle';\n        eventHeaderTitle.textContent = entry.title;\n        eventsContainer.appendChild(eventHeaderTitle);\n        const eventDescription = document.createElement('p');\n        eventDescription.className = 'eventDescription';\n        eventDescription.textContent = entry.description;\n        eventsContainer.appendChild(eventDescription);\n        const eventCategory = document.createElement('p');\n        eventCategory.className = 'eventCategory';\n        eventCategory.textContent = category.title;\n        eventsContainer.appendChild(eventCategory);\n        entriesContainer.appendChild(eventsContainer);\n      });\n    } catch (error) {\n      console.error('Error fetching calendar entries:', error);\n    }\n  };\n  const renderDays = () => {\n    return daysInMonth.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      // make sure if day is null it has class dayNumberSelected also has class empty\n      className: \"dayNumberSelected\",\n      onClick: changeSelected,\n      style: {\n        visibility: day === null ? 'hidden' : 'visible'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dayNumberContainer ${day === null ? 'empty' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayNumber\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"topButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"homeButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"secondTopRow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"monthTitleContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeMonth(\"back\"),\n            className: \"backButton\",\n            style: {\n              backgroundImage: `url(${backIcon})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"monthTitle\",\n            children: [new Date(currentYear, currentMonth).toLocaleString('default', {\n              month: 'long'\n            }), currentYear !== new Date().getFullYear() && ` ${currentYear}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => changeMonth(\"next\"),\n            className: \"nextButton\",\n            style: {\n              backgroundImage: `url(${backIcon})`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendarContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"daysOfWeekContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayOfWeek\",\n          children: \"Mon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayOfWeek\",\n          children: \"Tue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayOfWeek\",\n          children: \"Wed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayOfWeek\",\n          children: \"Thu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayOfWeek\",\n          children: \"Fri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayOfWeek\",\n          children: \"Sat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dayOfWeek\",\n          children: \"Sun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"calendarMonthContainer\",\n        children: renderDays()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendarEntries\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dateTitle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"entriesContainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s(Calendar, \"i278gDTEaKdDsmwV0DQWVOMPiRc=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","backIcon","jsxDEV","_jsxDEV","Calendar","_s","fetchCalendarEntries","fetchCategoryEntries","daysInMonth","setDaysInMonth","currentMonth","setCurrentMonth","Date","getMonth","currentYear","setCurrentYear","getFullYear","populateCalendar","updateConicGradients","month","year","firstDayOfMonth","getDay","daysInCurrentMonth","getDate","daysArray","i","push","calendarEntries","Array","isArray","console","error","categorysThatDay","date","entriesThatDay","filter","entry","entryDate","categoriesForDay","map","category","categoryEntries","categoryColors","reduce","acc","_id","color","conicGradients","categories","uniqueCategories","Set","segmentSize","length","gradientSteps","startAngle","endAngle","join","dayNumberContainers","document","querySelectorAll","forEach","container","style","backgroundImage","changeMonth","direction","newMonth","newYear","dayNumberSelected","day","classList","remove","changeSelected","event","log","currentTarget","image","querySelector","add","dateTitle","textContent","innerHTML","toLocaleDateString","updateEntries","entriesContainer","allEntries","categoryMap","title","eventsContainer","createElement","className","dataset","id","onclick","window","location","href","backgroundColor","eventHeaderTitle","appendChild","eventDescription","description","eventCategory","renderDays","index","onClick","visibility","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/helwes04/Documents/GitHub/workoutproject/frontend2/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport '../css/Calendar.css';\r\nimport backIcon from '../images/backArrow.svg';\r\n\r\nconst Calendar = () => {\r\n    const { fetchCalendarEntries, fetchCategoryEntries } = useContext(AuthContext);\r\n    const [daysInMonth, setDaysInMonth] = useState([]);\r\n    const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n    const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\r\n\r\n    useEffect(() => {\r\n        populateCalendar(currentMonth, currentYear);\r\n        updateConicGradients(currentMonth, currentYear);\r\n    }, [currentMonth, currentYear]);\r\n\r\n    const populateCalendar = (month, year) => {\r\n        const firstDayOfMonth = new Date(year, month, 1).getDay(); // get the day of the week the month starts on\r\n        const daysInCurrentMonth = new Date(year, month + 1, 0).getDate(); // get the number of days in the month\r\n\r\n        let daysArray = [];\r\n        for (let i = 0; i < firstDayOfMonth-1; i++) {\r\n            daysArray.push(null); // fill in empty slots for days before the 1st of the month\r\n        }\r\n        for (let i = 1; i <= daysInCurrentMonth; i++) {\r\n            daysArray.push(i);\r\n        }\r\n\r\n        setDaysInMonth(daysArray);\r\n    };\r\n\r\n    const updateConicGradients = async (month, year) => {\r\n        try {\r\n            const calendarEntries = await fetchCalendarEntries();\r\n\r\n            if (!Array.isArray(calendarEntries)) {\r\n                console.error('calendarEntries is not an array:', calendarEntries);\r\n                return;\r\n            }\r\n\r\n            const daysInCurrentMonth = new Date(year, month + 1, 0).getDate();\r\n            const categorysThatDay = [];\r\n\r\n            for (let i = 0; i < daysInCurrentMonth; i++) {\r\n                const date = new Date(year, month, i + 1);\r\n                const entriesThatDay = calendarEntries.filter(entry => {\r\n                    const entryDate = new Date(entry.date);\r\n                    return entryDate.getDate() === date.getDate() &&\r\n                           entryDate.getMonth() === date.getMonth() &&\r\n                           entryDate.getFullYear() === date.getFullYear();\r\n                });\r\n                const categoriesForDay = entriesThatDay.map(entry => entry.category);\r\n                categorysThatDay.push(categoriesForDay);\r\n            }\r\n\r\n            const categoryEntries = await fetchCategoryEntries();\r\n            const categoryColors = categoryEntries.reduce((acc, category) => {\r\n                acc[category._id] = category.color;\r\n                return acc;\r\n            }, {});\r\n\r\n            const conicGradients = categorysThatDay.map(categories => {\r\n                const uniqueCategories = [...new Set(categories)];\r\n                const segmentSize = 360 / uniqueCategories.length;\r\n                const gradientSteps = uniqueCategories.map((category, i) => {\r\n                    const color = categoryColors[category];\r\n                    const startAngle = i * segmentSize;\r\n                    const endAngle = (i + 1) * segmentSize;\r\n                    return `${color} ${startAngle}deg ${endAngle}deg`;\r\n                });\r\n                return `conic-gradient(${gradientSteps.join(', ')})`;\r\n            });\r\n\r\n            const dayNumberContainers = document.querySelectorAll('.dayNumberContainer:not(.empty)');\r\n            dayNumberContainers.forEach((container, i) => {\r\n                container.style.backgroundImage = conicGradients[i];\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching calendar entries:', error);\r\n        }\r\n    };\r\n\r\n    const changeMonth = (direction) => {\r\n        let newMonth = currentMonth;\r\n        let newYear = currentYear;\r\n\r\n        if (direction === 'back') {\r\n            newMonth = currentMonth === 0 ? 11 : currentMonth - 1;\r\n            newYear = currentMonth === 0 ? currentYear - 1 : currentYear;\r\n        } else if (direction === 'next') {\r\n            newMonth = currentMonth === 11 ? 0 : currentMonth + 1;\r\n            newYear = currentMonth === 11 ? currentYear + 1 : currentYear;\r\n        }\r\n\r\n        setCurrentMonth(newMonth);\r\n        setCurrentYear(newYear);\r\n\r\n        //clear all circle colors\r\n        const dayNumberContainers = document.querySelectorAll('.dayNumberContainer');\r\n        dayNumberContainers.forEach(container => {\r\n            container.style.backgroundImage = 'none';\r\n        });\r\n\r\n        //clear all selected days\r\n        const dayNumberSelected = document.querySelectorAll('.dayNumberSelected');\r\n        dayNumberSelected.forEach(day => {\r\n            day.classList.remove('selected');\r\n        });\r\n\r\n        //update the circle colors\r\n        updateConicGradients(newMonth, newYear);\r\n    }\r\n\r\n    const changeSelected = (event) => {\r\n        console.log('event:', event.currentTarget)\r\n        const dayNumberSelected = document.querySelectorAll('.dayNumberSelected');\r\n        const image = event.currentTarget.querySelector('.dayNumberContainer').style.backgroundImage;\r\n        if (image !== '' && image !== 'none') {\r\n            dayNumberSelected.forEach(day => {\r\n                day.classList.remove('selected');\r\n            });\r\n            event.currentTarget.classList.add('selected');\r\n\r\n            const dateTitle = document.querySelector('#dateTitle');\r\n\r\n            const day = event.currentTarget.querySelector('.dayNumber').textContent;\r\n            const date = new Date(currentYear, currentMonth, day);\r\n            if (currentYear === new Date().getFullYear()) {\r\n                dateTitle.innerHTML = date.toLocaleDateString('default', {month: 'long', day: 'numeric'});\r\n            }\r\n            else {\r\n                dateTitle.innerHTML = date.toLocaleDateString('default', {\r\n                    year: 'numeric',\r\n                    month: 'long',\r\n                    day: 'numeric'\r\n                });\r\n            }\r\n\r\n            updateEntries();\r\n        }\r\n\r\n    }\r\n\r\n    const updateEntries = async () => {\r\n        const entriesContainer = document.querySelector('#entriesContainer');\r\n        entriesContainer.innerHTML = '';\r\n\r\n        try {\r\n            const allEntries = await fetchCalendarEntries();\r\n            const categoryEntries = await fetchCategoryEntries();\r\n\r\n            // Create a mapping of category _id to its title and color\r\n            const categoryMap = categoryEntries.reduce((acc, category) => {\r\n                acc[category._id] = { title: category.title, color: category.color };\r\n                return acc;\r\n            }, {});\r\n\r\n            const month = currentMonth;\r\n            const year = currentYear;\r\n            const day = document.querySelector('.selected .dayNumber').textContent;\r\n\r\n            const date = new Date(year, month, day);\r\n\r\n            const entriesThatDay = allEntries.filter(entry => {\r\n                const entryDate = new Date(entry.date);\r\n                return entryDate.getDate() === date.getDate() &&\r\n                       entryDate.getMonth() === date.getMonth() &&\r\n                       entryDate.getFullYear() === date.getFullYear();\r\n            });\r\n\r\n            entriesThatDay.forEach(entry => {\r\n                const eventsContainer = document.createElement('div');\r\n                eventsContainer.className = 'eventContainer';\r\n                eventsContainer.dataset.id = entry._id;\r\n                // onclick redirect to the tasks page\r\n                eventsContainer.onclick = () => {\r\n                    window.location.href = `/tasks/${entry._id}`;\r\n                };\r\n\r\n                // Get the category details from the mapping\r\n                const category = categoryMap[entry.category] || { title: 'Unknown Category', color: '#ffffff' };\r\n\r\n                // Set the background color of the eventsContainer\r\n                eventsContainer.style.backgroundColor = category.color;\r\n\r\n                const eventHeaderTitle = document.createElement('p');\r\n                eventHeaderTitle.className = 'eventHeaderTitle';\r\n                eventHeaderTitle.textContent = entry.title;\r\n                eventsContainer.appendChild(eventHeaderTitle);\r\n\r\n                const eventDescription = document.createElement('p');\r\n                eventDescription.className = 'eventDescription';\r\n                eventDescription.textContent = entry.description;\r\n                eventsContainer.appendChild(eventDescription);\r\n\r\n                const eventCategory = document.createElement('p');\r\n                eventCategory.className = 'eventCategory';\r\n\r\n                eventCategory.textContent = category.title;\r\n                eventsContainer.appendChild(eventCategory);\r\n\r\n                entriesContainer.appendChild(eventsContainer);\r\n            });\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching calendar entries:', error);\r\n        }\r\n};\r\n\r\n    const renderDays = () => {\r\n        return daysInMonth.map((day, index) => (\r\n            <div\r\n                key={index}\r\n                // make sure if day is null it has class dayNumberSelected also has class empty\r\n                className=\"dayNumberSelected\"\r\n                onClick={changeSelected}\r\n                style={{visibility: day === null ? 'hidden' : 'visible'}}\r\n            >\r\n                <div className={`dayNumberContainer ${day === null ? 'empty' : ''}`}>\r\n                    <div className=\"dayNumber\">{day}</div>\r\n                </div>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Calendar</h1>\r\n            <div id=\"topButtons\">\r\n                <div id=\"homeButton\"></div>\r\n                <div id=\"secondTopRow\">\r\n                    <div id=\"monthTitleContainer\">\r\n                        <button onClick={() => changeMonth(\"back\")} className=\"backButton\" style={{backgroundImage: `url(${backIcon})`}}></button>\r\n                        <span className=\"monthTitle\">\r\n                            {new Date(currentYear, currentMonth).toLocaleString('default', {month: 'long'})}\r\n                            {currentYear !== new Date().getFullYear() && ` ${currentYear}`}\r\n                        </span>\r\n                        <button onClick={() => changeMonth(\"next\")} className=\"nextButton\" style={{backgroundImage: `url(${backIcon})`}}></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id=\"calendarContainer\">\r\n                <div id=\"daysOfWeekContainer\">\r\n                    <div className=\"dayOfWeek\">Mon</div>\r\n                    <div className=\"dayOfWeek\">Tue</div>\r\n                    <div className=\"dayOfWeek\">Wed</div>\r\n                    <div className=\"dayOfWeek\">Thu</div>\r\n                    <div className=\"dayOfWeek\">Fri</div>\r\n                    <div className=\"dayOfWeek\">Sat</div>\r\n                    <div className=\"dayOfWeek\">Sun</div>\r\n                </div>\r\n                <div id=\"calendarMonthContainer\">\r\n                    {renderDays()}\r\n                </div>\r\n            </div>\r\n            <div id=\"calendarEntries\">\r\n                <div id=\"dateTitle\"></div>\r\n                <div id=\"entriesContainer\"></div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}