{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helwes04\\\\Documents\\\\GitHub\\\\workoutproject\\\\frontend2\\\\src\\\\components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './Chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorkoutSplit = ({\n  workoutData\n}) => {\n  _s();\n  const [timeframe, setTimeframe] = useState('Last week');\n  const [chartData, setChartData] = useState({});\n  const [lastWorkouts, setLastWorkouts] = useState([]);\n\n  // Sample data structure for workoutData:\n  workoutData = [{\n    category: 'Basketball',\n    color: '#FFA500',\n    lastWorkout: '3 days',\n    percentage: 50\n  }, {\n    category: 'Strength',\n    color: '#6495ED',\n    lastWorkout: '1 day',\n    percentage: 25\n  }, {\n    category: 'Recovery',\n    color: '#9370DB',\n    lastWorkout: '6 days',\n    percentage: 25\n  }];\n  useEffect(() => {\n    // Update chart data based on the selected timeframe\n    const data = workoutData.map(workout => workout.percentage);\n    const colors = workoutData.map(workout => workout.color);\n    const labels = workoutData.map(workout => workout.category);\n    setChartData({\n      labels,\n      datasets: [{\n        data,\n        backgroundColor: colors\n      }]\n    });\n    setLastWorkouts(workoutData.map(workout => ({\n      category: workout.category,\n      lastWorkout: workout.lastWorkout\n    })));\n  }, [timeframe, workoutData]);\n  const renderNoDataMessage = () => {\n    if (timeframe === 'Last week' && workoutData.every(workout => workout.percentage === 0)) {\n      return 'No practices logged last week';\n    }\n    if (timeframe === 'Last month' && workoutData.every(workout => workout.percentage === 0)) {\n      return 'No practices logged last month';\n    }\n    return null;\n  };\n  const renderLastWorkouts = () => {\n    if (lastWorkouts.every(workout => workout.lastWorkout === null)) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No practices have been logged yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-workouts\",\n      children: lastWorkouts.map((workout, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [workout.category, \": \", workout.lastWorkout]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workout-split\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Workout Split\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeframe-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeframe('Last month'),\n        children: \"Last month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeframe('Last week'),\n        children: \"Last week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTimeframe('Next week'),\n        children: \"Next week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: renderNoDataMessage() || /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-workouts-container\",\n      children: renderLastWorkouts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(WorkoutSplit, \"hzKjpmGpmk4G0EKOgNM9sxhv0jY=\");\n_c = WorkoutSplit;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"WorkoutSplit\");","map":{"version":3,"names":["React","useState","useEffect","Pie","jsxDEV","_jsxDEV","WorkoutSplit","workoutData","_s","timeframe","setTimeframe","chartData","setChartData","lastWorkouts","setLastWorkouts","category","color","lastWorkout","percentage","data","map","workout","colors","labels","datasets","backgroundColor","renderNoDataMessage","every","renderLastWorkouts","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","onClick","_c","Chart","$RefreshReg$"],"sources":["C:/Users/helwes04/Documents/GitHub/workoutproject/frontend2/src/components/Chart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport './Chart.css';\r\n\r\nconst WorkoutSplit = ({ workoutData }) => {\r\n    const [timeframe, setTimeframe] = useState('Last week');\r\n    const [chartData, setChartData] = useState({});\r\n    const [lastWorkouts, setLastWorkouts] = useState([]);\r\n\r\n    // Sample data structure for workoutData:\r\n    workoutData = [\r\n    { category: 'Basketball', color: '#FFA500', lastWorkout: '3 days', percentage: 50 },\r\n    { category: 'Strength', color: '#6495ED', lastWorkout: '1 day', percentage: 25 },\r\n    { category: 'Recovery', color: '#9370DB', lastWorkout: '6 days', percentage: 25 },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        // Update chart data based on the selected timeframe\r\n        const data = workoutData.map(workout => workout.percentage);\r\n        const colors = workoutData.map(workout => workout.color);\r\n        const labels = workoutData.map(workout => workout.category);\r\n\r\n        setChartData({\r\n            labels,\r\n            datasets: [\r\n                {\r\n                    data,\r\n                    backgroundColor: colors,\r\n                },\r\n            ],\r\n        });\r\n\r\n        setLastWorkouts(workoutData.map(workout => ({\r\n            category: workout.category,\r\n            lastWorkout: workout.lastWorkout,\r\n        })));\r\n    }, [timeframe, workoutData]);\r\n\r\n    const renderNoDataMessage = () => {\r\n        if (timeframe === 'Last week' && workoutData.every(workout => workout.percentage === 0)) {\r\n            return 'No practices logged last week';\r\n        }\r\n        if (timeframe === 'Last month' && workoutData.every(workout => workout.percentage === 0)) {\r\n            return 'No practices logged last month';\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const renderLastWorkouts = () => {\r\n        if (lastWorkouts.every(workout => workout.lastWorkout === null)) {\r\n            return <p>No practices have been logged yet</p>;\r\n        }\r\n        return (\r\n            <div className=\"last-workouts\">\r\n                {lastWorkouts.map((workout, index) => (\r\n                    <p key={index}>\r\n                        {workout.category}: {workout.lastWorkout}\r\n                    </p>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"workout-split\">\r\n            <h1>Workout Split</h1>\r\n            <div className=\"timeframe-buttons\">\r\n                <button onClick={() => setTimeframe('Last month')}>Last month</button>\r\n                <button onClick={() => setTimeframe('Last week')}>Last week</button>\r\n                <button onClick={() => setTimeframe('Next week')}>Next week</button>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n                {renderNoDataMessage() || (\r\n                    <Pie data={chartData} />\r\n                )}\r\n            </div>\r\n            <div className=\"last-workouts-container\">\r\n                {renderLastWorkouts()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}