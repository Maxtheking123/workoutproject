{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helwes04\\\\Documents\\\\GitHub\\\\workoutproject\\\\frontend2\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { decodeToken } from '../utils/decodeToken';\nimport { v4 as uuidv4 } from 'uuid'; // Import UUID for generating unique IDs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst axiosInstance = axios.create({\n  baseURL: 'http://localhost:3000' // Set your base URL here\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState();\n  const [loading, setLoading] = useState(true);\n  const [categories, setCategories] = useState([]); // Initialize as an array\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      try {\n        const decodedToken = decodeToken(token);\n        setUser({\n          username: decodedToken.username\n        });\n      } catch (error) {\n        console.error('Invalid token:', error);\n        logout();\n      }\n    }\n    setLoading(false);\n    fetchCategories(); // Fetch categories when the component mounts\n  }, []);\n  const fetchCategories = async () => {\n    try {\n      const response = await axiosInstance.get('/api/categories/entries');\n      setCategories(response.data || []); // Ensure the response is an array\n    } catch (error) {\n      console.error('Error fetching categories:', error);\n      setCategories([]); // Fallback to an empty array on error\n    }\n  };\n  const addCategory = async category => {\n    const newCategory = {\n      ...category,\n      id: uuidv4()\n    };\n    try {\n      const response = await axiosInstance.post('/api/categories/entries', newCategory);\n      return response.data;\n    } catch (error) {\n      console.error('Error adding calendar entry:', error);\n      throw error;\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await axiosInstance.post('/api/auth/login', {\n        username,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem('token', token);\n      axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const decodedToken = decodeToken(token);\n      setUser({\n        username: decodedToken.username\n      });\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async (username, password) => {\n    try {\n      await axiosInstance.post('/api/auth/register', {\n        username,\n        password\n      });\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axiosInstance.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  const fetchCalendarEntries = async () => {\n    try {\n      const response = await axiosInstance.get('/api/calendar/entries');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching calendar entries:', error);\n      throw error;\n    }\n  };\n  const addCalendarEntry = async entry => {\n    try {\n      const response = await axiosInstance.post('/api/calendar/entries', entry);\n      return response.data;\n    } catch (error) {\n      console.error('Error adding calendar entry:', error);\n      throw error;\n    }\n  };\n  const updateCalendarEntry = async (id, entry) => {\n    try {\n      const response = await axiosInstance.put(`/api/calendar/entries/${id}`, entry);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating calendar entry:', error);\n      throw error;\n    }\n  };\n  const deleteCalendarEntry = async id => {\n    try {\n      const response = await axiosInstance.delete(`/api/calendar/entries/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting calendar entry:', error);\n      throw error;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      fetchCalendarEntries,\n      addCalendarEntry,\n      updateCalendarEntry,\n      deleteCalendarEntry,\n      categories,\n      addCategory\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"pd+ukgRrhso3M1ovtmLS0feEfhE=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","decodeToken","v4","uuidv4","jsxDEV","_jsxDEV","AuthContext","axiosInstance","create","baseURL","AuthProvider","children","_s","user","setUser","loading","setLoading","categories","setCategories","token","localStorage","getItem","defaults","headers","common","decodedToken","username","error","console","logout","fetchCategories","response","get","data","addCategory","category","newCategory","id","post","login","password","setItem","register","removeItem","fetchCalendarEntries","addCalendarEntry","entry","updateCalendarEntry","put","deleteCalendarEntry","delete","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["C:/Users/helwes04/Documents/GitHub/workoutproject/frontend2/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { decodeToken } from '../utils/decodeToken';\r\nimport { v4 as uuidv4 } from 'uuid'; // Import UUID for generating unique IDs\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'http://localhost:3000', // Set your base URL here\r\n});\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n    const [categories, setCategories] = useState([]); // Initialize as an array\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n            try {\r\n                const decodedToken = decodeToken(token);\r\n                setUser({ username: decodedToken.username });\r\n            } catch (error) {\r\n                console.error('Invalid token:', error);\r\n                logout();\r\n            }\r\n        }\r\n        setLoading(false);\r\n        fetchCategories(); // Fetch categories when the component mounts\r\n    }, []);\r\n\r\n    const fetchCategories = async () => {\r\n        try {\r\n            const response = await axiosInstance.get('/api/categories/entries');\r\n            setCategories(response.data || []); // Ensure the response is an array\r\n        } catch (error) {\r\n            console.error('Error fetching categories:', error);\r\n            setCategories([]); // Fallback to an empty array on error\r\n        }\r\n    };\r\n\r\n    const addCategory = async (category) => {\r\n        const newCategory = { ...category, id: uuidv4() };\r\n        try {\r\n            const response = await axiosInstance.post('/api/categories/entries', newCategory);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error adding calendar entry:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const login = async (username, password) => {\r\n        try {\r\n            const response = await axiosInstance.post('/api/auth/login', { username, password });\r\n            const token = response.data.token;\r\n            localStorage.setItem('token', token);\r\n            axiosInstance.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n            const decodedToken = decodeToken(token);\r\n            setUser({ username: decodedToken.username });\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const register = async (username, password) => {\r\n        try {\r\n            await axiosInstance.post('/api/auth/register', { username, password });\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        delete axiosInstance.defaults.headers.common['Authorization'];\r\n        setUser(null);\r\n    };\r\n\r\n    const fetchCalendarEntries = async () => {\r\n        try {\r\n            const response = await axiosInstance.get('/api/calendar/entries');\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching calendar entries:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const addCalendarEntry = async (entry) => {\r\n        try {\r\n            const response = await axiosInstance.post('/api/calendar/entries', entry);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error adding calendar entry:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const updateCalendarEntry = async (id, entry) => {\r\n        try {\r\n            const response = await axiosInstance.put(`/api/calendar/entries/${id}`, entry);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error updating calendar entry:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const deleteCalendarEntry = async (id) => {\r\n        try {\r\n            const response = await axiosInstance.delete(`/api/calendar/entries/${id}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error deleting calendar entry:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, register, logout, fetchCalendarEntries, addCalendarEntry, updateCalendarEntry, deleteCalendarEntry, categories, addCategory }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}