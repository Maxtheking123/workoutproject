{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helwes04\\\\Documents\\\\GitHub\\\\workoutproject\\\\frontend2\\\\src\\\\components\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport '../css/Tasks.css';\nimport { useParams } from 'react-router-dom';\nimport { getAndSaveLocalData } from \"../utils/getAndSaveLocalData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    updateEntriesFromDatabase,\n    getLocalData,\n    addCategoryGlobal,\n    addTaskGlobal,\n    addCalendarEntryGlobal,\n    updateCalendarEntryGlobal,\n    updateTaskGlobal,\n    deleteCalendarEntryGlobal,\n    deleteCategoryGlobal,\n    deleteTaskGlobal\n  } = getAndSaveLocalData();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [checked, setChecked] = useState(false);\n  const [categoryTitle, setCategoryTitle] = useState('');\n  const [completedTasks, setCompletedTasks] = useState(0);\n  const [categoryColor, setCategoryColor] = useState('');\n  const [totalTasks, setTotalTasks] = useState(0);\n  const [showNewTaskInput, setShowNewTaskInput] = useState(false);\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editingTaskTitle, setEditingTaskTitle] = useState('');\n  const newTaskInputRef = useRef(null);\n  const editingTaskInputRef = useRef(null);\n  useEffect(() => {\n    const loadTasks = async () => {\n      try {\n        const localData = getLocalData();\n        const userEntries = localData.calendarEntries;\n        const userCategories = localData.categoryEntries;\n        const userTasks = localData.Tasks;\n        console.log('userEntries:', userEntries);\n        console.log('userCategories:', userCategories);\n        console.log('userTasks:', userTasks);\n        const entry = userEntries.find(entry => entry._id === id);\n        const category = userCategories.find(category => category._id === entry.category);\n        const filteredTasks = userTasks.filter(task => task.entry === id);\n        setCompletedTasks(filteredTasks.filter(task => task.checked).length);\n        setTotalTasks(filteredTasks.length);\n        setCategoryTitle(category.title);\n        setCategoryColor(category.color);\n        const barHeader = document.querySelector(\"#barHeader\");\n        barHeader.textContent = category.title;\n        barHeader.style.color = category.color;\n        updateBar(category.color, filteredTasks.filter(task => task.checked).length, filteredTasks.length, category.title);\n        if (Array.isArray(filteredTasks)) {\n          setTasks(filteredTasks);\n        } else {\n          console.error('Expected an array of tasks, received:', filteredTasks);\n        }\n      } catch (error) {\n        console.error('Error loading tasks:', error);\n      }\n    };\n    loadTasks();\n  }, [id]);\n  const handleAddTask = async e => {\n    e.preventDefault();\n    if (title) {\n      try {\n        const newTask = await addTaskGlobal({\n          title,\n          entry: id,\n          checked\n        });\n        console.log(\"New task added: \", newTask);\n        const updatedTasks = [...tasks, newTask];\n        setTasks(updatedTasks);\n        setTitle('');\n        setChecked(false);\n        setTotalTasks(updatedTasks.length);\n        updateBar(categoryColor, completedTasks, updatedTasks.length, categoryTitle);\n      } catch (error) {\n        console.error('Error adding task:', error);\n      }\n    }\n  };\n  const handleUpdateTask = async (taskId, title, entry, checked) => {\n    try {\n      console.log('taskId:', taskId);\n      // Optimistically update UI\n      setTasks(prevTasks => prevTasks.map(task => task._id === taskId ? {\n        ...task,\n        title,\n        entry,\n        checked\n      } : task));\n      // Update the progress bar\n      const checkboxElements = document.querySelectorAll('input[type=\"checkbox\"]');\n      const completed = Array.from(checkboxElements).filter(checkbox => checkbox.checked).length;\n      setCompletedTasks(completed);\n      updateBar(categoryColor, completed, totalTasks, categoryTitle);\n      // Await the async update operation\n      const updatedTask = await updateTaskGlobal(taskId, {\n        title,\n        entry,\n        checked\n      });\n      console.log(\"Task updated: \", taskId, {\n        title,\n        entry,\n        checked\n      });\n\n      // Ensure UI matches the final updated task from the server\n      setTasks(prevTasks => prevTasks.map(task => task._id === taskId ? updatedTask : task));\n    } catch (error) {\n      console.error('Error updating task:', error);\n      // Revert optimistic update in case of error\n      setTasks(prevTasks => prevTasks.map(task => task._id === taskId ? {\n        ...task,\n        title,\n        entry,\n        checked: !checked\n      } : task));\n    }\n  };\n  const updateBar = (color, completed, total, categoryTitle) => {\n    const barFill = document.querySelector(\"#barFill\");\n    barFill.style.background = color || categoryColor;\n    barFill.style.width = `calc(100% * (${completed} / ${total || totalTasks}))`;\n  };\n  const handleClickOutside = e => {\n    if (newTaskInputRef.current && !newTaskInputRef.current.contains(e.target)) {\n      if (title.trim() === '') {\n        setTitle('');\n        setShowNewTaskInput(false);\n      } else {\n        handleAddTask(e);\n        setShowNewTaskInput(false);\n      }\n    }\n    if (editingTaskInputRef.current && !editingTaskInputRef.current.contains(e.target)) {\n      if (editingTaskTitle.trim() === '') {\n        handleDeleteTask(editingTaskId);\n      } else {\n        handleUpdateTask(editingTaskId, editingTaskTitle, id, tasks.find(task => task._id === editingTaskId).checked);\n      }\n      setEditingTaskId(null);\n      setEditingTaskTitle('');\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTaskGlobal(taskId);\n      const updatedTasks = tasks.filter(task => task._id !== taskId);\n      setTasks(updatedTasks);\n      setTotalTasks(updatedTasks.length);\n      updateBar(categoryColor, completedTasks, updatedTasks.length, categoryTitle);\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [title, editingTaskTitle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PageContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"topContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"backButtonContainer\",\n        onClick: () => document.location.href = '/',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"backIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"barContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"barTextContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"barHeader\",\n            children: categoryTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"barNumbers\",\n            children: [completedTasks, \"/\", totalTasks]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"barBackground\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"barFill\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"control control-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.checked,\n            onChange: e => handleUpdateTask(task._id, task.title, task.entry, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control_indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }, this), editingTaskId === task._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingTaskTitle,\n          onChange: e => setEditingTaskTitle(e.target.value),\n          ref: editingTaskInputRef,\n          autoFocus: true,\n          className: \"taskTitleInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"taskTitle\",\n          onClick: () => {\n            setEditingTaskId(task._id);\n            setEditingTaskTitle(task.title);\n          },\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 33\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No tasks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this), showNewTaskInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"taskContainer\",\n        ref: newTaskInputRef,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"control control-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"control_indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Task Title\",\n          autoFocus: true,\n          className: \"taskTitleInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addTaskContainer\",\n        onClick: () => setShowNewTaskInput(true),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"U6b30FV0UmVVW7M2hxZyebZEEoM=\", false, function () {\n  return [useParams];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","AuthContext","useParams","getAndSaveLocalData","jsxDEV","_jsxDEV","Tasks","_s","id","updateEntriesFromDatabase","getLocalData","addCategoryGlobal","addTaskGlobal","addCalendarEntryGlobal","updateCalendarEntryGlobal","updateTaskGlobal","deleteCalendarEntryGlobal","deleteCategoryGlobal","deleteTaskGlobal","tasks","setTasks","title","setTitle","checked","setChecked","categoryTitle","setCategoryTitle","completedTasks","setCompletedTasks","categoryColor","setCategoryColor","totalTasks","setTotalTasks","showNewTaskInput","setShowNewTaskInput","editingTaskId","setEditingTaskId","editingTaskTitle","setEditingTaskTitle","newTaskInputRef","editingTaskInputRef","loadTasks","localData","userEntries","calendarEntries","userCategories","categoryEntries","userTasks","console","log","entry","find","_id","category","filteredTasks","filter","task","length","color","barHeader","document","querySelector","textContent","style","updateBar","Array","isArray","error","handleAddTask","e","preventDefault","newTask","updatedTasks","handleUpdateTask","taskId","prevTasks","map","checkboxElements","querySelectorAll","completed","from","checkbox","updatedTask","total","barFill","background","width","handleClickOutside","current","contains","target","trim","handleDeleteTask","addEventListener","removeEventListener","className","children","onClick","location","href","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","value","ref","autoFocus","disabled","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/helwes04/Documents/GitHub/workoutproject/frontend2/src/components/Tasks.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport '../css/Tasks.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getAndSaveLocalData } from \"../utils/getAndSaveLocalData\";\r\n\r\nconst Tasks = () => {\r\n    const { id } = useParams();\r\n    const { updateEntriesFromDatabase, getLocalData, addCategoryGlobal, addTaskGlobal, addCalendarEntryGlobal, updateCalendarEntryGlobal, updateTaskGlobal, deleteCalendarEntryGlobal, deleteCategoryGlobal, deleteTaskGlobal } = getAndSaveLocalData();\r\n    const [tasks, setTasks] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [categoryTitle, setCategoryTitle] = useState('');\r\n    const [completedTasks, setCompletedTasks] = useState(0);\r\n    const [categoryColor, setCategoryColor] = useState('');\r\n    const [totalTasks, setTotalTasks] = useState(0);\r\n    const [showNewTaskInput, setShowNewTaskInput] = useState(false);\r\n    const [editingTaskId, setEditingTaskId] = useState(null);\r\n    const [editingTaskTitle, setEditingTaskTitle] = useState('');\r\n    const newTaskInputRef = useRef(null);\r\n    const editingTaskInputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const loadTasks = async () => {\r\n            try {\r\n                const localData = getLocalData();\r\n                const userEntries = localData.calendarEntries;\r\n                const userCategories = localData.categoryEntries;\r\n                const userTasks = localData.Tasks;\r\n                console.log('userEntries:', userEntries);\r\n                console.log('userCategories:', userCategories);\r\n                console.log('userTasks:', userTasks);\r\n                const entry = userEntries.find((entry) => entry._id === id);\r\n                const category = userCategories.find((category) => category._id === entry.category);\r\n\r\n                const filteredTasks = userTasks.filter((task) => task.entry === id);\r\n                setCompletedTasks(filteredTasks.filter((task) => task.checked).length);\r\n                setTotalTasks(filteredTasks.length);\r\n\r\n                setCategoryTitle(category.title);\r\n                setCategoryColor(category.color);\r\n\r\n                const barHeader = document.querySelector(\"#barHeader\");\r\n                barHeader.textContent = category.title;\r\n                barHeader.style.color = category.color;\r\n\r\n                updateBar(category.color, filteredTasks.filter((task) => task.checked).length, filteredTasks.length, category.title);\r\n\r\n                if (Array.isArray(filteredTasks)) {\r\n                    setTasks(filteredTasks);\r\n                } else {\r\n                    console.error('Expected an array of tasks, received:', filteredTasks);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error loading tasks:', error);\r\n            }\r\n        };\r\n        loadTasks();\r\n    }, [id]);\r\n\r\n    const handleAddTask = async (e) => {\r\n        e.preventDefault();\r\n        if (title) {\r\n            try {\r\n                const newTask = await addTaskGlobal({ title, entry: id, checked });\r\n                console.log(\"New task added: \", newTask);\r\n                const updatedTasks = [...tasks, newTask];\r\n                setTasks(updatedTasks);\r\n                setTitle('');\r\n                setChecked(false);\r\n                setTotalTasks(updatedTasks.length);\r\n                updateBar(categoryColor, completedTasks, updatedTasks.length, categoryTitle);\r\n            } catch (error) {\r\n                console.error('Error adding task:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpdateTask = async (taskId, title, entry, checked) => {\r\n        try {\r\n            console.log('taskId:', taskId);\r\n            // Optimistically update UI\r\n            setTasks((prevTasks) =>\r\n                prevTasks.map((task) =>\r\n                    task._id === taskId ? { ...task, title, entry, checked } : task\r\n                )\r\n            );\r\n            // Update the progress bar\r\n            const checkboxElements = document.querySelectorAll('input[type=\"checkbox\"]');\r\n            const completed = Array.from(checkboxElements).filter((checkbox) => checkbox.checked).length;\r\n            setCompletedTasks(completed);\r\n\r\n            updateBar(categoryColor, completed, totalTasks, categoryTitle);\r\n            // Await the async update operation\r\n            const updatedTask = await updateTaskGlobal(taskId, { title, entry, checked });\r\n            console.log(\"Task updated: \", taskId, { title, entry, checked });\r\n\r\n            // Ensure UI matches the final updated task from the server\r\n            setTasks((prevTasks) =>\r\n                prevTasks.map((task) =>\r\n                    task._id === taskId ? updatedTask : task\r\n                )\r\n            );\r\n        } catch (error) {\r\n            console.error('Error updating task:', error);\r\n            // Revert optimistic update in case of error\r\n            setTasks((prevTasks) =>\r\n                prevTasks.map((task) =>\r\n                    task._id === taskId ? { ...task, title, entry, checked: !checked } : task\r\n                )\r\n            );\r\n        }\r\n    };\r\n\r\n    const updateBar = (color, completed, total, categoryTitle) => {\r\n        const barFill = document.querySelector(\"#barFill\");\r\n        barFill.style.background = color || categoryColor;\r\n        barFill.style.width = `calc(100% * (${completed} / ${total || totalTasks}))`;\r\n    };\r\n\r\n    const handleClickOutside = (e) => {\r\n        if (newTaskInputRef.current && !newTaskInputRef.current.contains(e.target)) {\r\n            if (title.trim() === '') {\r\n                setTitle('');\r\n                setShowNewTaskInput(false);\r\n            } else {\r\n                handleAddTask(e);\r\n                setShowNewTaskInput(false);\r\n            }\r\n        }\r\n        if (editingTaskInputRef.current && !editingTaskInputRef.current.contains(e.target)) {\r\n            if (editingTaskTitle.trim() === '') {\r\n                handleDeleteTask(editingTaskId);\r\n            } else {\r\n                handleUpdateTask(editingTaskId, editingTaskTitle, id, tasks.find(task => task._id === editingTaskId).checked);\r\n            }\r\n            setEditingTaskId(null);\r\n            setEditingTaskTitle('');\r\n        }\r\n    };\r\n\r\n    const handleDeleteTask = async (taskId) => {\r\n        try {\r\n            await deleteTaskGlobal(taskId);\r\n            const updatedTasks = tasks.filter(task => task._id !== taskId);\r\n            setTasks(updatedTasks);\r\n            setTotalTasks(updatedTasks.length);\r\n            updateBar(categoryColor, completedTasks, updatedTasks.length, categoryTitle);\r\n        } catch (error) {\r\n            console.error('Error deleting task:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [title, editingTaskTitle]);\r\n\r\n    return (\r\n        <div className=\"PageContainer\">\r\n            <div id=\"topContainer\">\r\n                <div id=\"backButtonContainer\" onClick={() => document.location.href = '/'}>\r\n                    <div id=\"backIcon\"></div>\r\n                    <p>Start</p>\r\n                </div>\r\n                <div id=\"barContainer\">\r\n                    <div id=\"barTextContainer\">\r\n                        <div id=\"barHeader\">{categoryTitle}</div>\r\n                        <div id=\"barNumbers\">{completedTasks}/{totalTasks}</div>\r\n                    </div>\r\n                    <div id=\"barBackground\">\r\n                        <div id=\"barFill\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                {tasks.length > 0 ? (\r\n                    tasks.map((task) => (\r\n                        <div className=\"taskContainer\" key={task._id}>\r\n                            <label className=\"control control-checkbox\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={task.checked}\r\n                                    onChange={(e) => handleUpdateTask(task._id, task.title, task.entry, e.target.checked)}\r\n                                />\r\n                                <div className=\"control_indicator\"></div>\r\n                            </label>\r\n                            {editingTaskId === task._id ? (\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={editingTaskTitle}\r\n                                    onChange={(e) => setEditingTaskTitle(e.target.value)}\r\n                                    ref={editingTaskInputRef}\r\n                                    autoFocus\r\n                                    className=\"taskTitleInput\"\r\n                                />\r\n                            ) : (\r\n                                <p\r\n                                    className=\"taskTitle\"\r\n                                    onClick={() => {\r\n                                        setEditingTaskId(task._id);\r\n                                        setEditingTaskTitle(task.title);\r\n                                    }}\r\n                                >\r\n                                    {task.title}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>No tasks available</div>\r\n                )}\r\n                {showNewTaskInput && (\r\n                    <div className=\"taskContainer\" ref={newTaskInputRef}>\r\n                        <label className=\"control control-checkbox\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                disabled\r\n                            />\r\n                            <div className=\"control_indicator\"></div>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            placeholder=\"Task Title\"\r\n                            autoFocus\r\n                            className=\"taskTitleInput\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div id=\"footer\">\r\n                <div id=\"addTaskContainer\" onClick={() => setShowNewTaskInput(true)}>\r\n                    <p>New Task</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}