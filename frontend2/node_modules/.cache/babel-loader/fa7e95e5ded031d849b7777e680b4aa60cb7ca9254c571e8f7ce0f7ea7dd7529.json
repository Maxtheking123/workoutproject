{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\helwes04\\\\Documents\\\\GitHub\\\\workoutproject\\\\frontend2\\\\src\\\\components\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { AuthContext } from \"../context/AuthContext\";\nimport '../css/Chart.css';\nimport backIcon from \"../images/backArrow.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst Chart = () => {\n  _s();\n  const {\n    fetchCalendarEntries,\n    fetchCategoryEntries\n  } = useContext(AuthContext);\n  const [chartData, setChartData] = useState(null);\n  const [chartPercentages, setChartPercentages] = useState(null);\n  const [chartTitles, setChartTitles] = useState(null);\n  const [timeSinceLast, setTimeSinceLast] = useState(null);\n  const [timeFrame, setTimeFrame] = useState(-7);\n  const [allEntries, setAllEntries] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  const updateTimeFrame = useCallback(() => {\n    let newTimeFrame = -7;\n    const timeElement = document.querySelector('.timeButton.selected');\n    if (timeElement) {\n      if (timeElement.id === 'lastMonth') {\n        newTimeFrame = -30;\n      } else if (timeElement.id === 'lastWeek') {\n        newTimeFrame = -7;\n      } else if (timeElement.id === 'nextWeek') {\n        newTimeFrame = 7;\n      }\n      setTimeFrame(newTimeFrame);\n    }\n  }, []);\n  const calculateTimeSinceLast = useCallback((entries, categories) => {\n    const timeSinceLast = categories.map(category => {\n      const lastEntry = entries.filter(entry => entry.category === category._id).sort((a, b) => new Date(b.date) - new Date(a.date))[0];\n      return lastEntry ? Math.round((new Date() - new Date(lastEntry.date)) / 1000 / 60 / 60 / 24) : null;\n    });\n    setTimeSinceLast(timeSinceLast);\n  }, []);\n  const getEntries = useCallback(timeFrame => {\n    const currentDate = new Date();\n    const targetDate = new Date(currentDate);\n    targetDate.setDate(currentDate.getDate() + timeFrame);\n    const filteredEntries = allEntries.filter(entry => {\n      const entryDate = new Date(entry.date);\n      return timeFrame > 0 ? entryDate <= targetDate && entryDate >= currentDate : entryDate >= targetDate && entryDate <= currentDate;\n    });\n    const usedCategoryIdsInTimeframe = [...new Set(filteredEntries.map(entry => entry.category))];\n    const categoryLabelsInTimeframe = [];\n    const categoryCounts = [];\n    const categoryColors = [];\n    usedCategoryIdsInTimeframe.forEach(categoryId => {\n      const category = allCategories.find(cat => cat._id === categoryId);\n      if (category) {\n        categoryLabelsInTimeframe.push(category.title);\n        categoryColors.push(category.color);\n        const count = filteredEntries.filter(entry => entry.category === categoryId).length;\n        categoryCounts.push(count);\n      }\n    });\n    setChartTitles(categoryLabelsInTimeframe);\n    if (categoryLabelsInTimeframe.length !== 0) {\n      const data = {\n        labels: categoryLabelsInTimeframe,\n        datasets: [{\n          data: categoryCounts,\n          backgroundColor: categoryColors\n        }]\n      };\n      setChartData(data);\n    } else {\n      const data = {\n        labels: ['No data'],\n        datasets: [{\n          data: [1],\n          backgroundColor: ['#5C5C5C']\n        }]\n      };\n      setChartData(data);\n    }\n    const total = categoryCounts.reduce((a, b) => a + b, 0);\n    const percentages = categoryCounts.map(count => count / total * 100);\n    setChartPercentages(percentages);\n  }, [allEntries, allCategories]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedEntries = await fetchCalendarEntries();\n      const fetchedCategories = await fetchCategoryEntries();\n      setAllEntries(fetchedEntries);\n      setAllCategories(fetchedCategories);\n      calculateTimeSinceLast(fetchedEntries, fetchedCategories);\n    };\n    fetchData();\n  }, [fetchCalendarEntries, fetchCategoryEntries, calculateTimeSinceLast]);\n  useEffect(() => {\n    updateTimeFrame();\n  }, [updateTimeFrame]);\n  useEffect(() => {\n    if (timeFrame !== null) {\n      getEntries(timeFrame);\n    }\n  }, [timeFrame, getEntries]);\n  const changeTimeFrame = timeFrameId => {\n    const timeElements = document.getElementsByClassName('timeButton');\n    for (const timeElement of timeElements) {\n      timeElement.classList.remove('selected');\n    }\n    document.getElementById(timeFrameId).classList.add('selected');\n    updateTimeFrame();\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    borderWidth: 0,\n    plugins: {\n      legend: {\n        display: false\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chartPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"topContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"homeButtonContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"backIcon\",\n          style: {\n            backgroundImage: `url(${backIcon})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"homeButton\",\n          onClick: () => document.location.href = '/',\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"WorkoutsplitTitle\",\n        children: \"Workoutsplit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timeContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"lastMonth\",\n          className: \"timeButton\",\n          onClick: () => changeTimeFrame('lastMonth'),\n          children: \"Last month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"lastWeek\",\n          className: \"timeButton selected\",\n          onClick: () => changeTimeFrame('lastWeek'),\n          children: \"Last week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"nextWeek\",\n          className: \"timeButton\",\n          onClick: () => changeTimeFrame('nextWeek'),\n          children: \"Next week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chartContainer\",\n      children: chartData ? /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"leftAlignedTextContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"percentagesContainer\",\n        children: chartPercentages ? chartPercentages.map((percentage, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"percentage\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color\",\n            style: {\n              backgroundColor: chartData.datasets[0].backgroundColor[index]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"percentageNumber\",\n            children: [percentage.toFixed(0), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label\",\n            children: chartTitles[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timeSinceLastContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"timeSinceLastTitle\",\n          children: \"Time since last workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), timeSinceLast ? timeSinceLast.map((time, index) => {\n          var _allCategories$index;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeSinceLast\",\n            style: {\n              display: time < 0 ? 'none' : 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"label\",\n              children: (_allCategories$index = allCategories[index]) === null || _allCategories$index === void 0 ? void 0 : _allCategories$index.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"time\",\n              children: time > -1 ? time + (time === 1 ? ' day' : ' days') : 'Never'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n_s(Chart, \"yfN07xE3YtITsr/OmmwTNYBp42g=\");\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","useContext","useState","useEffect","useCallback","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","AuthContext","backIcon","jsxDEV","_jsxDEV","register","_s","fetchCalendarEntries","fetchCategoryEntries","chartData","setChartData","chartPercentages","setChartPercentages","chartTitles","setChartTitles","timeSinceLast","setTimeSinceLast","timeFrame","setTimeFrame","allEntries","setAllEntries","allCategories","setAllCategories","updateTimeFrame","newTimeFrame","timeElement","document","querySelector","id","calculateTimeSinceLast","entries","categories","map","category","lastEntry","filter","entry","_id","sort","a","b","Date","date","Math","round","getEntries","currentDate","targetDate","setDate","getDate","filteredEntries","entryDate","usedCategoryIdsInTimeframe","Set","categoryLabelsInTimeframe","categoryCounts","categoryColors","forEach","categoryId","find","cat","push","title","color","count","length","data","labels","datasets","backgroundColor","total","reduce","percentages","fetchData","fetchedEntries","fetchedCategories","changeTimeFrame","timeFrameId","timeElements","getElementsByClassName","classList","remove","getElementById","add","options","responsive","maintainAspectRatio","borderWidth","plugins","legend","display","children","className","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","href","percentage","index","toFixed","time","_allCategories$index","_c","$RefreshReg$"],"sources":["C:/Users/helwes04/Documents/GitHub/workoutproject/frontend2/src/components/Chart.js"],"sourcesContent":["import React, { useContext, useState, useEffect, useCallback } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport '../css/Chart.css';\r\nimport backIcon from \"../images/backArrow.svg\";\r\n\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst Chart = () => {\r\n    const { fetchCalendarEntries, fetchCategoryEntries } = useContext(AuthContext);\r\n    const [chartData, setChartData] = useState(null);\r\n    const [chartPercentages, setChartPercentages] = useState(null);\r\n    const [chartTitles, setChartTitles] = useState(null);\r\n    const [timeSinceLast, setTimeSinceLast] = useState(null);\r\n    const [timeFrame, setTimeFrame] = useState(-7);\r\n    const [allEntries, setAllEntries] = useState([]);\r\n    const [allCategories, setAllCategories] = useState([]);\r\n\r\n    const updateTimeFrame = useCallback(() => {\r\n        let newTimeFrame = -7;\r\n        const timeElement = document.querySelector('.timeButton.selected');\r\n        if (timeElement) {\r\n            if (timeElement.id === 'lastMonth') {\r\n                newTimeFrame = -30;\r\n            } else if (timeElement.id === 'lastWeek') {\r\n                newTimeFrame = -7;\r\n            } else if (timeElement.id === 'nextWeek') {\r\n                newTimeFrame = 7;\r\n            }\r\n            setTimeFrame(newTimeFrame);\r\n        }\r\n    }, []);\r\n\r\n    const calculateTimeSinceLast = useCallback((entries, categories) => {\r\n        const timeSinceLast = categories.map(category => {\r\n            const lastEntry = entries\r\n                .filter(entry => entry.category === category._id)\r\n                .sort((a, b) => new Date(b.date) - new Date(a.date))[0];\r\n            return lastEntry ? Math.round((new Date() - new Date(lastEntry.date)) / 1000 / 60 / 60 / 24) : null;\r\n        });\r\n\r\n        setTimeSinceLast(timeSinceLast);\r\n    }, []);\r\n\r\n    const getEntries = useCallback((timeFrame) => {\r\n        const currentDate = new Date();\r\n        const targetDate = new Date(currentDate);\r\n        targetDate.setDate(currentDate.getDate() + timeFrame);\r\n\r\n        const filteredEntries = allEntries.filter(entry => {\r\n            const entryDate = new Date(entry.date);\r\n            return timeFrame > 0 ? entryDate <= targetDate && entryDate >= currentDate : entryDate >= targetDate && entryDate <= currentDate;\r\n        });\r\n\r\n        const usedCategoryIdsInTimeframe = [...new Set(filteredEntries.map(entry => entry.category))];\r\n\r\n        const categoryLabelsInTimeframe = [];\r\n        const categoryCounts = [];\r\n        const categoryColors = [];\r\n\r\n        usedCategoryIdsInTimeframe.forEach(categoryId => {\r\n            const category = allCategories.find(cat => cat._id === categoryId);\r\n            if (category) {\r\n                categoryLabelsInTimeframe.push(category.title);\r\n                categoryColors.push(category.color);\r\n                const count = filteredEntries.filter(entry => entry.category === categoryId).length;\r\n                categoryCounts.push(count);\r\n            }\r\n        });\r\n        setChartTitles(categoryLabelsInTimeframe);\r\n\r\n        if (categoryLabelsInTimeframe.length !== 0) {\r\n            const data = {\r\n                labels: categoryLabelsInTimeframe,\r\n                datasets: [\r\n                    {\r\n                        data: categoryCounts,\r\n                        backgroundColor: categoryColors,\r\n                    }\r\n                ]\r\n            };\r\n            setChartData(data);\r\n        } else {\r\n            const data = {\r\n                labels: ['No data'],\r\n                datasets: [\r\n                    {\r\n                        data: [1],\r\n                        backgroundColor: ['#5C5C5C'],\r\n                    }\r\n                ]\r\n            };\r\n            setChartData(data);\r\n        }\r\n\r\n        const total = categoryCounts.reduce((a, b) => a + b, 0);\r\n        const percentages = categoryCounts.map(count => (count / total) * 100);\r\n        setChartPercentages(percentages);\r\n\r\n    }, [allEntries, allCategories]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const fetchedEntries = await fetchCalendarEntries();\r\n            const fetchedCategories = await fetchCategoryEntries();\r\n            setAllEntries(fetchedEntries);\r\n            setAllCategories(fetchedCategories);\r\n            calculateTimeSinceLast(fetchedEntries, fetchedCategories);\r\n        };\r\n        fetchData();\r\n    }, [fetchCalendarEntries, fetchCategoryEntries, calculateTimeSinceLast]);\r\n\r\n    useEffect(() => {\r\n        updateTimeFrame();\r\n    }, [updateTimeFrame]);\r\n\r\n    useEffect(() => {\r\n        if (timeFrame !== null) {\r\n            getEntries(timeFrame);\r\n        }\r\n    }, [timeFrame, getEntries]);\r\n\r\n    const changeTimeFrame = (timeFrameId) => {\r\n        const timeElements = document.getElementsByClassName('timeButton');\r\n        for (const timeElement of timeElements) {\r\n            timeElement.classList.remove('selected');\r\n        }\r\n        document.getElementById(timeFrameId).classList.add('selected');\r\n        updateTimeFrame();\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        borderWidth: 0,\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div id=\"chartPage\">\r\n            <div id=\"topContainer\">\r\n                <div id=\"homeButtonContainer\">\r\n                    <div className=\"backIcon\" style={{backgroundImage: `url(${backIcon})`}}></div>\r\n                    <div id=\"homeButton\" onClick={() => document.location.href = '/'}>Home</div>\r\n                </div>\r\n                <div id=\"WorkoutsplitTitle\">Workoutsplit</div>\r\n                <div id=\"timeContainer\">\r\n                    <div id=\"lastMonth\" className=\"timeButton\" onClick={() => changeTimeFrame('lastMonth')}>Last month</div>\r\n                    <div id=\"lastWeek\" className=\"timeButton selected\" onClick={() => changeTimeFrame('lastWeek')}>Last week</div>\r\n                    <div id=\"nextWeek\" className=\"timeButton\" onClick={() => changeTimeFrame('nextWeek')}>Next week</div>\r\n                </div>\r\n            </div>\r\n            <div id=\"chartContainer\">\r\n                {chartData ? (\r\n                    <Pie data={chartData} options={options}/>\r\n                ) : (\r\n                    <p>Loading...</p>\r\n                )}\r\n            </div>\r\n            <div id=\"leftAlignedTextContainer\">\r\n                <div id=\"percentagesContainer\">\r\n                    {chartPercentages ? (\r\n                        chartPercentages.map((percentage, index) => (\r\n                            <div key={index} className=\"percentage\">\r\n                                <div className=\"color\" style={{backgroundColor: chartData.datasets[0].backgroundColor[index]}}></div>\r\n                                <div className=\"percentageNumber\">{percentage.toFixed(0)}%</div>\r\n                                <div className=\"label\">{chartTitles[index]}</div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )}\r\n                </div>\r\n                <div id=\"timeSinceLastContainer\">\r\n                    <div id=\"timeSinceLastTitle\">Time since last workout</div>\r\n                    {timeSinceLast ? (\r\n                        timeSinceLast.map((time, index) => (\r\n                            <div key={index} className=\"timeSinceLast\" style={{display: time < 0 ? 'none' : 'flex' }}>\r\n                                <div className=\"label\">{allCategories[index]?.title}</div>\r\n                                <div className=\"time\">{time > -1 ? (time + (time === 1 ? ' day' : ' days')) : 'Never'}</div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>Loading...</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}